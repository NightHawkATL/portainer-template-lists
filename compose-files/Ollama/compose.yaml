services:
  ollama:
    volumes:
      - ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:latest
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - 11434:11434

# GPU support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu   

  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    volumes:
      - open-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - ENABLE_RAG_WEB_SEARCH=true
      - RAG_WEB_SEARCH_ENGINE="searxng"
      - RAG_WEB_SEARCH_RESULT_COUNT=3
      - RAG_WEB_SEARCH_CONCURRENT_REQUESTS=10
      - SEARXNG_QUERY_URL="http://SearxngIP:port/search?q=<query>" #You can also use a proxied or public version but the local IP and port also works.
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped

  #Speech models
  opened-ai:
    image: ghcr.io/matatonic/openedai-speech
    container_name: openedai-speech
    environment:
      - TTS_HOME=voices
      - HF_HOME=voices
      - TZ=America/New_York
    ports:
      - "8000:8000"
    volumes:
      - tts-voices:/app/voices
      - tts-config:/app/config
      - /etc/timezone:/etc/timezone
      - /etc/localtime:/etc/localtime
    restart: unless-stopped

volumes:
  ollama: {}
  open-webui: {}
  #Speech Models storage
  tts-voices: {}
  tts-config: {}
